#!/bin/sh

die()
{
    echo "ERROR: $*"

    exit 1
}

HOME=/home/tangweit/

MAKESB=${HOME}NEW_DEVELOPMENT/makesb

WORKDIR=${HOME}workspace/
SRCDIR=${WORKDIR}src/
DESDIR=${WORKDIR}des/
JARDESDIR=${DESDIR}jar/
EXEDESDIR=${DESDIR}exe/

SANDBOXCONF=${SRCDIR}sandbox.conf

MAINDIR=mm/com/ibm/esshmc/sfw/

[ ! -f $SANDBOXCONF ] && die "File $SANDBOXCONF not found !"

NUMLIST=$(awk '{print $1}' $SANDBOXCONF)
VERLIST=$(awk '{print $2}' $SANDBOXCONF)
idx=0
for num in $NUMLIST
do
  NUMARRAY[$idx]=$num

  idx=$(($idx + 1))
done
idx=0
for ver in $VERLIST
do
  VERARRAY[$idx]=$ver

  idx=$(($idx + 1))
done

[ ! -d $WORKDIR ] && mkdir $WORKDIR
[ ! -d $WORKDIR ] && die "Can't create workspace directory in $HOME !"
[ ! -d $SRCDIR ] && mkdir $SRCDIR
[ ! -d $SRCDIR ] && die "Can't create src directory in $WORKDIR !"
[ ! -d $DESDIR ] && mkdir $DESDIR
[ ! -d $DESDIR ] && die "Can't create des directory in $WORKDIR !"
[ ! -d $JARDESDIR ] && mkdir $JARDESDIR
[ ! -d $JARDESDIR ] && die "Can't create jar directory in $DESDIR !"
[ ! -d $EXEDESDIR ] && mkdir $EXEDESDIR
[ ! -d $EXEDESDIR ] && die "Can't create exe directory in $DESDIR !"

rm -f ${JARDESDIR}* || die "Can't clear jar file in $JARDESDIR !"
rm -f ${EXEDESDIR}* || die "Can't clear exe file in $EXEDESDIR !"

cp ${HOME}.profile ${HOME}.profile.bak

rc=0
for ((i=0; i<${#NUMARRAY[@]}; i++))
do
  num=${NUMARRAY[$i]}
  ver=${VERARRAY[$i]}

  sed -in "s/^\(release=\).*/\1${ver##HMC}/" ${HOME}.profile
  sed -in "s/^echo.*/# &/g" ${HOME}.profile
  sed -in "s/^read.*/# &/g" ${HOME}.profile

  . ${HOME}.profile

  sed -in "/sb sb$num/d" ${HOME}.sandboxrc
  [ -d ${HOME}sb/sb$num ] && rm -rf ${HOME}sb/sb$num

  workdir=${HOME}sb/sb${num}/src/

  $MAKESB sb$num . $ver && sed -in "s% ${MAINDIR#mm/}\./\.class%%g" ${workdir}${MAINDIR}getJar.sh && sed -in "s/^cp.*/# &/g" ${workdir}${MAINDIR}getJar.sh || { rc=1; continue; }

  cp -r $SRCDIR$num/src/* $workdir

  classlist=(`find $workdir -name "*.java" | sed "s%\.java%\.class%g"`)
  idx=0
  for class in $classlist
  do
    classarray[$idx]=$class

    idx=$(($idx + 1))
  done
  for ((j=0; j<${#classarray[@]}; j++))
  do
    sed -in "s%^/opt/.*%& ${classarray[$j]#${HOME}sb/sb$num/src/mm/}%g" ${workdir}${MAINDIR}getJar.sh
  done

  clist=(`find $workdir -name "*.c" | sed "s%\.c%%g"`)
  idx=0
  for c in $clist
  do
    carray[$idx]=$c

    idx=$(($idx + 1))
  done
  for ((j=0; j<${#carray[@]}; j++))
  do
    gcc ${carray[$j]}.c -o ${EXEDESDIR}`basename ${carray[$j]}`.$num.exe && cp ${EXEDESDIR}`basename ${carray[$j]}`.$num.exe $EXEDESDIR || { rc=1; continue; }
  done

  cpplist=(`find $workdir -name "*.C" | sed "s%\.C%%g"`)
  idx=0
  for cpp in $cpplist
  do
    cpparray[$idx]=$cpp

    idx=$(($idx + 1))
  done
  for ((j=0; j<${#cpparray[@]}; j++))
  do
    g++ ${cpparray[$j]}.c -o ${EXEDESDIR}`basename ${cpparray[$j]}`.$num.exe && cp ${EXEDESDIR}`basename ${cpparray[$j]}`.$num.exe $EXEDESDIR || { rc=1; continue; }
  done

  workon -sb sb$num -c $workdir$MAINDIR/bld && cp $workdir$MAINDIR/sb$num.jar $JARDESDIR || { rc=1; continue; }
done

mv ${HOME}.profile.bak ${HOME}.profile

rm $0

exit $rc
